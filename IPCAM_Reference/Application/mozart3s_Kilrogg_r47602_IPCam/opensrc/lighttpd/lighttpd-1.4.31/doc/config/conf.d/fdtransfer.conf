#######################################################################
##
##  FD Transfer Module (This functionality is strictly only for 
## Linux based system which provide the functionality of transfering
## an opened file descriptor to a new process.)
## --------------- 
##
##

server.modules += ( "mod_fd_transfer" )

##########################################################################
##
## libstratus static-fild-fd-server example
##
## Use below given configuration for serving static files through filesystem root, 
## while running test server provided with libstratus module 
##
## The configuration asks for list of backend service providers. These services are 
## described by mapping the URL and the corresponding executable files. 
##
## This helps in writing the REST based API server.
##
## You can also configure the socket creation path. Ideally you would prefer it to be 
## somewhere in /tmp section.
##

## VN
## Important: We don't want to the fd_transfer to fork our process when our process is not started.
## So we commnet out the bin-path
  fd_transfer.services  = ( "/live1.sdp" => 
                                  ( 
                                    "socket" => "/tmp/rtspsrv_fdipc.sck", 
                                    #"bin-path" => "/usr/sbin/venc"
                                  ),
                            "/live2.sdp" => 
                                  ( 
                                    "socket" => "/tmp/rtspsrv_fdipc.sck", 
                                    #"bin-path" => "/usr/sbin/venc"
                                  ),
                            "/live3.sdp" => 
                                  ( 
                                    "socket" => "/tmp/rtspsrv_fdipc.sck", 
                                    #"bin-path" => "/usr/sbin/venc"
                                  ),
                            "/live4.sdp" => 
                                  ( 
                                    "socket" => "/tmp/rtspsrv_fdipc.sck", 
                                    #"bin-path" => "/usr/sbin/venc"
                                  ),
                            "/video1.mjpg" => 
                                  ( 
                                    "socket" => "/tmp/serverpush/http_spush.sck", 
                                    #"bin-path" => "/usr/sbin/serverpush"
                                  ),
                            "/video2.mjpg" => 
                                  ( 
                                    "socket" => "/tmp/serverpush/http_spush.sck", 
                                    #"bin-path" => "/usr/sbin/serverpush"
                                  ),
                            "/video3.mjpg" => 
                                  ( 
                                    "socket" => "/tmp/serverpush/http_spush.sck", 
                                    #"bin-path" => "/usr/sbin/serverpush"
                                  ),
                            "/video4.mjpg" => 
                                  ( 
                                    "socket" => "/tmp/serverpush/http_spush.sck", 
                                    #"bin-path" => "/usr/sbin/serverpush"
                                  ),
                            "/onvif/device_service" => 
                                  ( 
                                    "socket" => "/var/run/onvifd.sck", 
                                    #"bin-path" => "/usr/sbin/onvifd"
                                  ),
                            "/onvif/event_service" => 
                                  ( 
                                    "socket" => "/var/run/onvifevt.sck", 
                                    #"bin-path" => "/usr/sbin/onvif_evt"
                                  ),
                            "/Subscription" => 
                                  ( 
                                    "socket" => "/var/run/onvifevt.sck", 
                                    #"bin-path" => "/usr/sbin/onvif_evt"
                                  ),
                          )

#######################################################################
##
## libstratus multiple services example
##
## Use below configuration when you have multiple service providers in the backend, 
## ready to serve requests. Where each service handles request with specific URL prefix.
##
## This configuration is ideal for REST based API server.
##
#  fd_transfer.services  = ( 
#                              "/api/v1" => 
#                                  ( 
#                                    "socket" => "/tmp/api-v1-fdt.socket", 
#                                    "bin-path" => "/usr/local/bin/api_v1"
#                                  ),
#                              "/api/v2" => 
#                                  ( 
#                                    "socket" => "/tmp/api-v2-fdt.socket", 
#                                    "bin-path" => "/usr/local/bin/api_v2"
#                                  ),
#                              "/view" => 
#                                  ( 
#                                    "socket" => "/tmp/view-fdt.socket", 
#                                    "bin-path" => "/usr/local/bin/view"
#                                  ),
#                              "/controller" => 
#                                  ( 
#                                    "socket" => "/tmp/controller-fdt.socket", 
#                                    "bin-path" => "/usr/local/bin/controller"
#                                  )
#                          )

##
#######################################################################
